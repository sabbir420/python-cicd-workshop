version: 2.1

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Setup Enviroment
          command: |
            virtualenv myapp
            . myapp/bin/activate

      - run:
          name: Install Python Dependencies
          command: |
            . myapp/bin/activate
            make install

      - save_cache:
          paths:
            - ./myapp
          key: v1-dependencies-{{ checksum "requirements.txt" }}
            
      - run:
          name: Lint the App
          command: |
            . myapp/bin/activate            
            make lint

      - run:
          name: Run tests
          command: |
            . myapp/bin/activate
            python test_my_app.py

  build-and-push-docker-image:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and Push Docker Image
          command: |
            virtualenv myapp
            . myapp/bin/activate
            make install
            pyinstaller -F my_app.py
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=python-cicd-workshop' >> $BASH_ENV
            source $BASH_ENV
            docker build -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$IMAGE_NAME:$TAG


workflows:
  main:
    jobs:
      - build-and-test
      - build-and-push-docker-image:
          requires:
            - build-and-test
          filters:
            branches:
              only: master